/*
export namespace App {

}
*/

//export namespace AlgaNews {
export namespace Apl {
  /**
   * This file was auto-generated by openapi-typescript.
   * Do not make direct changes to the file.
   */

  export interface paths {
    '/users/{userId}': {
      /** Se a requisi��o for autenticada para um editor, s� poder� ter acesso ao recurso do pr�prio usu�rio. <br>Caso a requisi��o for autenticada para um gerente ou assistente, poder� ter acesso a qualquer recurso de usu�rio. */
      get: operations['getUserById'];
      /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. <br>Assistentes n�o podem atualizar informa��es sens�veis de usu�rios com perfis de n�vel de acesso maior que os seus. */
      put: operations['updateUser'];
      parameters: {
        path: {
          userId: number;
        };
      };
    };
    '/users': {
      /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. */
      get: operations['getUsers'];
      /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. <br>Assistentes n�o podem criar usu�rios com perfis de n�vel de acesso maior que os seus. */
      post: operations['createUser'];
    };
    '/users/{userId}/activation': {
      /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. <br>Assistentes n�o podem ativar usu�rios com perfis de n�vel de acesso maior que os seus. */
      put: operations['activateUser'];
      /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. <br>Assistentes n�o podem desativar usu�rios com perfis de n�vel de acesso maior que os seus. */
      delete: operations['deactivateUser'];
      parameters: {
        path: {
          userId: number;
        };
      };
    };
    '/users/editors/{editorId}': {
      get: operations['getEditorById'];
      parameters: {
        path: {
          editorId: number;
        };
      };
    };
    '/users/editors': {
      get: operations['getEditors'];
    };
    '/posts': {
      get: operations['getPosts'];
      post: operations['createPost'];
    };
    '/posts/{postId}': {
      get: operations['getPostById'];
      put: operations['updatePost'];
      delete: operations['deletePost'];
      parameters: {
        path: {
          postId: number;
        };
      };
    };
    '/posts/{postId}/publishing': {
      put: operations['publishPost'];
      delete: operations['unpublishPost'];
      parameters: {
        path: {
          postId: number;
        };
      };
    };
    '/payments': {
      get: operations['getPayments'];
      post: operations['createPayment'];
    };
    '/payments/bulk-approvals': {
      put: operations['approveBulkPayments'];
    };
    '/payments/previews': {
      /** Uma simula��o de pagamento n�o � persistida no sistema */
      post: operations['createPaymentPreview'];
    };
    '/payments/{paymentId}/approval': {
      put: operations['approvePayment'];
      parameters: {
        path: {
          /** ID do pagamento */
          paymentId: number;
        };
      };
    };
    '/payments/{paymentId}': {
      get: operations['getPayment'];
      /** Exclui fisicamente um pagamento. Caso o pagamento j� tenha sido aprovado, n�o ser� poss�vel exclu�-lo. */
      delete: operations['deletePayment'];
      parameters: {
        path: {
          /** ID do pagamento */
          paymentId: number;
        };
      };
    };
    '/payments/{paymentId}/posts': {
      get: operations['getPostsByPayment'];
      parameters: {
        path: {
          paymentId: number;
        };
        query: {
          /** Nome da propriedade para ordena��o */
          sort?: components['parameters']['pageSort'];
        };
      };
    };
    '/cashflow/entries/{entryId}': {
      get: operations['getCashFlowEntry'];
      /** N�o � permitido atualizar um lan�amento financeiro gerado pelo sistema. */
      put: operations['updateCashFlowEntry'];
      /** Exclui fisicamente um lan�amento financeiro. Caso o lan�amento informado tenha sido gerado pelo sistema, n�o ser� poss�vel exclu�-lo. */
      delete: operations['deleteCashFlowEntry'];
      parameters: {
        path: {
          /** ID do lan�amento financeiro */
          entryId: number;
        };
      };
    };
    '/cashflow/entries': {
      get: operations['getCashFlowEntries'];
      post: operations['createCashFlowEntry'];
    };
    '/cashflow/entries/bulk-removals': {
      put: operations['deleteBulkCashFlowEntries'];
    };
    '/cashflow/categories/{categoryId}': {
      get: operations['getCashFlowCategory'];
      put: operations['updateCashFlowCategory'];
      /** Exclui fisicamente uma categoria. Caso a categoria possua lan�amentos vinculados, n�o ser� poss�vel exclu�-la. */
      delete: operations['deleteCashFlowCategory'];
      parameters: {
        path: {
          /** ID da categoria */
          categoryId: number;
        };
      };
    };
    '/cashflow/categories': {
      get: operations['getCashFlowCategories'];
      post: operations['createCashFlowCategory'];
    };
    '/metrics/monthly-revenues-expenses': {
      get: {
        parameters: {
          query: {
            /** Ano para filtro da consulta */
            yearMonth: string;
          };
        };
        responses: {
          /** OK */
          200: {
            content: {
              'application/json': components['schemas']['MonthlyRevenuesExpenses'];
              'application/vnd.alganews.chartjs+json': components['schemas']['MonthlyRevenuesExpensesChartjs'];
            };
          };
        };
      };
    };
    '/metrics/editor/monthly-earnings': {
      get: {
        parameters: {
          query: {
            /** Ano para filtro da consulta */
            yearMonth: string;
          };
        };
        responses: {
          /** OK */
          200: {
            content: {
              'application/json': components['schemas']['EditorMonthlyEarnings'];
            };
          };
        };
      };
    };
    '/metrics/editor/top3-tags': {
      get: {
        responses: {
          /** OK */
          200: {
            content: {
              'application/json': components['schemas']['EditorTagRatio'];
            };
          };
        };
      };
    };
    '/upload-requests': {
      post: operations['createUploadRequest'];
    };
  }

  export interface components {
    schemas: {
      // ??? Teste de Classe com dados em arquivo JSON dentro da pasta assets/dados
      /** Links de urls da internet */
      UrlLink: {
        id: number;
        url: string;
        description: string;
      };

      /** Usu�rio muito resumido (m�nimo) possui apenas id, nome e avatar. */
      UserMinimal: {
        id: number;
        name: string;
        avatarUrls: components['schemas']['ImageUrls'];
      };
      /** Usu�rio resumido possui apenas os principais dados. */
      UserSummary: {
        id: number;
        name: string;
        email: string;
        avatarUrls: components['schemas']['ImageUrls'];
        role: components['schemas']['Role'];
        active: boolean;
        createdAt: string;
        /** Se o usu�rio autenticado pode ou n�o ativar este usu�rio */
        canBeActivated: boolean;
        /** Se o usu�rio autenticado pode ou n�o desativar este usu�rio */
        canBeDeactivated: boolean;
        /** Se o usu�rio autenticado pode ou n�o alterar dados sens�veis deste usu�rio */
        canSensitiveDataBeUpdated: boolean;
      };
      /** Usu�rio detalhado cont�m todos os dados. */
      UserDetailed: {
        id: number;
        name: string;
        email: string;
        avatarUrls: components['schemas']['ImageUrls'];
        bio: string;
        role: components['schemas']['Role'];
        birthdate: string;
        phone: string;
        taxpayerId: string;
        pricePerWord: number;
        active: boolean;
        createdAt: string;
        bankAccount: components['schemas']['BankAccount'];
        location: components['schemas']['Location'];
        skills: components['schemas']['Skill'][] | null;
        metrics: components['schemas']['UserMetrics'];
        updatedAt: string;
        updatedBy: components['schemas']['UserMinimal'];
        createdBy: components['schemas']['UserMinimal'];
        /** Se o usu�rio autenticado pode ou n�o ativar este usu�rio */
        canBeActivated: boolean;
        /** Se o usu�rio autenticado pode ou n�o desativar este usu�rio */
        canBeDeactivated: boolean;
        /** Se o usu�rio autenticado pode ou n�o alterar dados sens�veis deste usu�rio */
        canSensitiveDataBeUpdated: boolean;
      };
      UserInput: {
        name: string;
        email: string;
        avatarUrl?: string;
        bio: string;
        taxpayerId: string;
        phone: string;
        pricePerWord?: number;
        role: components['schemas']['Role'];
        birthdate: string;
        bankAccount: components['schemas']['BankAccount'];
        location: components['schemas']['Location'];
        skills?: components['schemas']['Skill'][] | null;
      };
      UserIdInput: {
        id: number;
      };
      UserMetrics: {
        weeklyEarnings: number;
        monthlyEarnings: number;
        lifetimeEarnings: number;
        weeklyWords: number;
        monthlyWords: number;
        lifetimeWords: number;
      };
      /** Editor (usu�rio) resumido possui apenas os principais dados. */
      EditorSummary: {
        id: number;
        name: string;
        avatarUrls: components['schemas']['ImageUrls'];
        createdAt: string;
      };
      /** Editor (usu�rio) detalhado cont�m todos os dados. */
      EditorDetailed: {
        id: number;
        name: string;
        avatarUrls: components['schemas']['ImageUrls'];
        bio: string;
        createdAt: string;
        location: components['schemas']['Location'];
        skills: components['schemas']['Skill'][] | null;
      };
      PostSummary: {
        id: number;
        slug: string;
        title: string;
        imageUrls: components['schemas']['ImageUrls'];
        editor: components['schemas']['EditorSummary'];
        createdAt: string;
        updatedAt: string;
        published: boolean;
        tags: string[];
        /** Se o usu�rio autenticado pode ou n�o publicar o post */
        canBePublished: boolean;
        /** Se o usu�rio autenticado pode ou n�o despublicar o post */
        canBeUnpublished: boolean;
        /** Se o usu�rio autenticado pode ou n�o remover o post */
        canBeDeleted: boolean;
        /** Se o usu�rio autenticado pode ou n�o editar o post */
        canBeEdited: boolean;
      };
      PostDetailed: {
        id: number;
        editor: components['schemas']['EditorSummary'];
        slug: string;
        title: string;
        imageUrls: components['schemas']['ImageUrls'];
        /** Corpo do post em formato Markdown */
        body: string;
        tags: string[];
        createdAt: string;
        earnings?: components['schemas']['PostEarnings'];
        published: boolean;
        updatedAt: string;
        updatedBy: components['schemas']['UserMinimal'];
        /** Se o usu�rio autenticado pode ou n�o publicar o post */
        canBePublished: boolean;
        /** Se o usu�rio autenticado pode ou n�o despublicar o post */
        canBeUnpublished: boolean;
        /** Se o usu�rio autenticado pode ou n�o remover o post */
        canBeDeleted: boolean;
        /** Se o usu�rio autenticado pode ou n�o editar o post */
        canBeEdited: boolean;
      };
      PostWithEarnings: {
        id: number;
        title: string;
        imageUrls: components['schemas']['ImageUrls'];
        createdAt: string;
        earnings: components['schemas']['PostEarnings'];
        published: boolean;
      };
      PostInput: {
        title: string;
        imageUrl: string;
        /** Este campo retornar� uma string marcada utilizando markdown */
        body: string;
        tags: string[];
      };
      PostsPaginated: components['schemas']['Page'] & {
        content?: components['schemas']['PostSummary'][];
      };
      PaymentInput: {
        payee: components['schemas']['UserIdInput'];
        accountingPeriod: components['schemas']['Period'];
        bonuses?: components['schemas']['Bonus'][];
        scheduledTo: string;
      };
      PaymentPreviewInput: {
        payee: components['schemas']['UserIdInput'];
        accountingPeriod: components['schemas']['Period'];
        bonuses?: components['schemas']['Bonus'][];
      };
      PaymentPreview: {
        accountingPeriod: components['schemas']['Period'];
        payee: components['schemas']['UserMinimal'];
        earnings: components['schemas']['PaymentEarnings'];
        bonuses: components['schemas']['Bonus'][];
        grandTotalAmount: number;
        bankAccount: components['schemas']['BankAccount'];
      };
      PaymentDetailed: {
        id: number;
        accountingPeriod: components['schemas']['Period'];
        payee: components['schemas']['UserMinimal'];
        earnings: components['schemas']['PaymentEarnings'];
        bonuses: components['schemas']['Bonus'][];
        grandTotalAmount: number;
        bankAccount: components['schemas']['BankAccount'];
        createdBy: components['schemas']['UserMinimal'];
        approvedBy: components['schemas']['UserMinimal'];
        createdAt: string;
        scheduledTo: string;
        approvedAt: string;
        updatedAt: string;
        updatedBy: components['schemas']['UserMinimal'];
        /** Se o usu�rio autenticado pode ou n�o aprovar o pagamento */
        canBeApproved: boolean;
        /** Se o usu�rio autenticado pode ou n�o remover o pagamento */
        canBeDeleted: boolean;
      };
      PaymentSummary: {
        id: number;
        grandTotalAmount: number;
        accountingPeriod: components['schemas']['Period'];
        payee: components['schemas']['UserMinimal'];
        approvedAt: string;
        scheduledTo: string;
        /** Se o usu�rio autenticado pode ou n�o aprovar o pagamento */
        canBeApproved: boolean;
        /** Se o usu�rio autenticado pode ou n�o remover o pagamento */
        canBeDeleted: boolean;
      };
      PaymentsPaginated: components['schemas']['Page'] & {
        content?: components['schemas']['PaymentSummary'][];
      };
      CashFlowCategoryDetailed: {
        id: number;
        name: string;
        updatedAt: string;
        updatedBy: components['schemas']['UserMinimal'];
        type: components['schemas']['CashFlowEntryType'];
        createdAt: string;
        createdBy: components['schemas']['UserMinimal'];
        totalEntries: number;
        canBeDeleted: boolean;
      };
      CashFlowCategorySummary: {
        id: number;
        name: string;
        type: components['schemas']['CashFlowEntryType'];
        totalEntries: number;
        canBeDeleted: boolean;
      };
      CashFlowCategoryMinimal: {
        id: number;
        name: string;
        type: components['schemas']['CashFlowEntryType'];
      };
      CashFlowCategoryInput: {
        name: string;
        type: components['schemas']['CashFlowEntryType'];
      };
      CashFlowCategoryIdInput: {
        id: number;
      };
      CashFlowEntryType: 'REVENUE' | 'EXPENSE';
      CashFlowEntrySummary: {
        id: number;
        type: components['schemas']['CashFlowEntryType'];
        transactedOn: string;
        amount: number;
        category: components['schemas']['CashFlowCategoryMinimal'];
        description: string;
        systemGenerated: boolean;
        canBeDeleted: boolean;
        canBeEdited: boolean;
      };
      CashFlowEntryDetailed: {
        id: number;
        type: components['schemas']['CashFlowEntryType'];
        transactedOn: string;
        amount: number;
        category: components['schemas']['CashFlowCategoryMinimal'];
        description: string;
        systemGenerated: boolean;
        createdBy: components['schemas']['UserMinimal'];
        createdAt: string;
        updatedAt: string;
        updatedBy: components['schemas']['UserMinimal'];
        canBeDeleted: boolean;
        canBeEdited: boolean;
      };
      CashFlowEntryInput: {
        type: components['schemas']['CashFlowEntryType'];
        transactedOn: string;
        amount: number;
        category: components['schemas']['CashFlowCategoryIdInput'];
        description: string;
      };
      MonthlyRevenuesExpensesChartjs: {
        datasets: {
          label: 'Receita' | 'Despesa';
          data: number[];
        }[];
        labels?: string[];
      };
      MonthlyRevenuesExpenses: {
        yearMonth: string;
        totalRevenues: number;
        totalExpenses: number;
      }[];
      EditorMonthlyEarnings: {
        yearMonth: string;
        totalAmount: number;
        totalPlatformAverageAmount: number;
      }[];
      EditorTagRatio: {
        tagName: string;
        percentage: number;
      }[];
      ImageUrls: {
        default: string;
        small: string;
        medium: string;
        large: string;
      };
      Bonus: {
        title: string;
        amount: number;
      };
      Location: {
        country: string;
        state: string;
        city: string;
      };
      Skill: {
        name: string;
        percentage: number;
      };
      BankAccount: {
        bankCode: string;
        agency: string;
        number: string;
        digit: string;
        /**
         * Tipos de contas:
         *  * `SAVING` - Conta poupan�a
         *  * `CHECKING` - Conta corrente
         */
        type: 'SAVING' | 'CHECKING';
      };
      /**
       * Tipos de perfis:
       *   * `EDITOR` - Editor de conte�do
       *   * `ASSISTANT` - Auxiliar de recursos humanos e administra��o
       *   * `MANAGER` - Gerente da plataforma
       */
      Role: 'EDITOR' | 'ASSISTANT' | 'MANAGER';
      PostEarnings: {
        pricePerWord: number;
        words: number;
        totalAmount: number;
      };
      PaymentEarnings: {
        words: number;
        totalAmount: number;
      };
      Period: {
        startsOn: string;
        endsOn: string;
      };
      UploadRequestInput: {
        fileName: string;
        contentLength: number;
      };
      UploadRequest: {
        uploadSignedUrl: string;
      };
      Page: {
        page: number;
        size: number;
        totalPages: number;
        totalElements: number;
      };
      ProblemObject: {
        name?: string;
        userMessage: string;
      };
      /** Representa um problema na comunica��o com a API. Este modelo de representa��o � baseado na RFC 7807 (Problem Details for HTTP APIs) */
      Problem: {
        status: number;
        timestamp: string;
        type: string;
        title: string;
        detail: string;
        /** Lista de objetos ou campos que geraram o erro (opcional) */
        objects?: components['schemas']['ProblemObject'][];
      };
    };
    responses: {
      /** Recurso n�o encontrado */
      NotFound: {
        content: {
          'application/json': components['schemas']['Problem'];
        };
      };
      /** Requisi��o inv�lida */
      BadRequest: {
        content: {
          'application/json': components['schemas']['Problem'];
        };
      };
    };
    parameters: {
      /** N�mero da p�gina para a consulta */
      pageNumber: number;
      /** Quantidade de itens por p�gina */
      pageSize: number;
      /** Nome da propriedade para ordena��o */
      pageSort: string[];
    };
  }

  export interface operations {
    /** Se a requisi��o for autenticada para um editor, s� poder� ter acesso ao recurso do pr�prio usu�rio. <br>Caso a requisi��o for autenticada para um gerente ou assistente, poder� ter acesso a qualquer recurso de usu�rio. */
    getUserById: {
      parameters: {
        path: {
          userId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['UserDetailed'];
          };
        };
        404: components['responses']['NotFound'];
      };
    };
    /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. <br>Assistentes n�o podem atualizar informa��es sens�veis de usu�rios com perfis de n�vel de acesso maior que os seus. */
    updateUser: {
      parameters: {
        path: {
          userId: number;
        };
      };
      responses: {
        /** Usu�rio atualizado */
        200: {
          content: {
            'application/json': components['schemas']['UserDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
        404: components['responses']['NotFound'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['UserInput'];
        };
      };
    };
    /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. */
    getUsers: {
      parameters: {
        query: {
          /** Termo para consulta nas propriedades de nome, e-mail e CPF */
          term?: string;
          /** Nome do usu�rio */
          name?: string;
          /** E-mail do usu�rio */
          email?: string;
          /** Nome da propriedade para ordena��o */
          sort?: components['parameters']['pageSort'];
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['UserSummary'][];
          };
        };
      };
    };
    /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. <br>Assistentes n�o podem criar usu�rios com perfis de n�vel de acesso maior que os seus. */
    createUser: {
      responses: {
        /** Usu�rio criado */
        201: {
          content: {
            'application/json': components['schemas']['UserDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['UserInput'];
        };
      };
    };
    /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. <br>Assistentes n�o podem ativar usu�rios com perfis de n�vel de acesso maior que os seus. */
    activateUser: {
      parameters: {
        path: {
          userId: number;
        };
      };
      responses: {
        /** Usu�rio ativado */
        204: never;
        404: components['responses']['NotFound'];
      };
    };
    /** Apenas requisi��es autenticadas para gerentes ou assistentes s�o v�lidas. <br>Assistentes n�o podem desativar usu�rios com perfis de n�vel de acesso maior que os seus. */
    deactivateUser: {
      parameters: {
        path: {
          userId: number;
        };
      };
      responses: {
        /** Usu�rio desativado */
        204: never;
        404: components['responses']['NotFound'];
      };
    };
    getEditorById: {
      parameters: {
        path: {
          editorId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['EditorDetailed'];
          };
        };
        404: components['responses']['NotFound'];
      };
    };
    getEditors: {
      parameters: {
        query: {
          /** Nome da propriedade para ordena��o */
          sort?: components['parameters']['pageSort'];
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['EditorSummary'][];
          };
        };
      };
    };
    getPosts: {
      parameters: {
        query: {
          /** ID do editor (usu�rio) do post */
          editorId?: number;
          /** N�mero da p�gina para a consulta */
          page?: components['parameters']['pageNumber'];
          /** Quantidade de itens por p�gina */
          size?: components['parameters']['pageSize'];
          /** Nome da propriedade para ordena��o */
          sort?: components['parameters']['pageSort'];
          /** Inclui todos os posts no resultado da consulta (incluindo os despublicados) */
          showAll?: boolean;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['PostsPaginated'];
          };
        };
      };
    };
    createPost: {
      responses: {
        /** Post criado */
        201: {
          content: {
            'application/json': components['schemas']['PostDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['PostInput'];
        };
      };
    };
    getPostById: {
      parameters: {
        path: {
          postId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['PostDetailed'];
          };
        };
      };
    };
    updatePost: {
      parameters: {
        path: {
          postId: number;
        };
      };
      responses: {
        /** Post alterado */
        200: {
          content: {
            'application/json': components['schemas']['PostDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
        404: components['responses']['NotFound'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['PostInput'];
        };
      };
    };
    deletePost: {
      parameters: {
        path: {
          postId: number;
        };
      };
      responses: {
        /** Post exclu�do */
        204: never;
        404: components['responses']['NotFound'];
      };
    };
    publishPost: {
      parameters: {
        path: {
          postId: number;
        };
      };
      responses: {
        /** Post publicado */
        204: never;
        404: components['responses']['NotFound'];
      };
    };
    unpublishPost: {
      parameters: {
        path: {
          postId: number;
        };
      };
      responses: {
        /** Post despublicado */
        204: never;
        404: components['responses']['NotFound'];
      };
    };
    getPayments: {
      parameters: {
        query: {
          /** ID do benefici�rio (usu�rio) do pagamento */
          payeeId?: number;
          /** E-mail do benefici�rio (usu�rio) do pagamento */
          payeeEmail?: string;
          /** M�s/ano do agendamento */
          scheduledToYearMonth?: string;
          /** N�mero da p�gina para a consulta */
          page?: components['parameters']['pageNumber'];
          /** Quantidade de itens por p�gina */
          size?: components['parameters']['pageSize'];
          /** Nome da propriedade para ordena��o */
          sort?: components['parameters']['pageSort'];
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['PaymentsPaginated'];
          };
        };
      };
    };
    createPayment: {
      responses: {
        /** Pagamento criado */
        201: {
          content: {
            'application/json': components['schemas']['PaymentDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['PaymentInput'];
        };
      };
    };
    approveBulkPayments: {
      responses: {
        /** Pagamentos aprovados */
        204: never;
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': number[];
        };
      };
    };
    /** Uma simula��o de pagamento n�o � persistida no sistema */
    createPaymentPreview: {
      responses: {
        /** Simula��o de pagamento criada */
        201: {
          content: {
            'application/json': components['schemas']['PaymentPreview'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['PaymentPreviewInput'];
        };
      };
    };
    approvePayment: {
      parameters: {
        path: {
          /** ID do pagamento */
          paymentId: number;
        };
      };
      responses: {
        /** Pagamento aprovado */
        204: never;
        400: components['responses']['BadRequest'];
        404: components['responses']['NotFound'];
      };
    };
    getPayment: {
      parameters: {
        path: {
          /** ID do pagamento */
          paymentId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['PaymentDetailed'];
          };
        };
        404: components['responses']['NotFound'];
      };
    };
    /** Exclui fisicamente um pagamento. Caso o pagamento j� tenha sido aprovado, n�o ser� poss�vel exclu�-lo. */
    deletePayment: {
      parameters: {
        path: {
          /** ID do pagamento */
          paymentId: number;
        };
      };
      responses: {
        /** Pagamento exclu�do */
        204: never;
        404: components['responses']['NotFound'];
      };
    };
    getPostsByPayment: {
      parameters: {
        path: {
          paymentId: number;
        };
        query: {
          /** Nome da propriedade para ordena��o */
          sort?: components['parameters']['pageSort'];
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['PostWithEarnings'][];
          };
        };
      };
    };
    getCashFlowEntry: {
      parameters: {
        path: {
          /** ID do lan�amento financeiro */
          entryId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['CashFlowEntryDetailed'];
          };
        };
        404: components['responses']['NotFound'];
      };
    };
    /** N�o � permitido atualizar um lan�amento financeiro gerado pelo sistema. */
    updateCashFlowEntry: {
      parameters: {
        path: {
          /** ID do lan�amento financeiro */
          entryId: number;
        };
      };
      responses: {
        /** Lan�amento financeiro atualizado */
        200: {
          content: {
            'application/json': components['schemas']['CashFlowEntryDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['CashFlowEntryInput'];
        };
      };
    };
    /** Exclui fisicamente um lan�amento financeiro. Caso o lan�amento informado tenha sido gerado pelo sistema, n�o ser� poss�vel exclu�-lo. */
    deleteCashFlowEntry: {
      parameters: {
        path: {
          /** ID do lan�amento financeiro */
          entryId: number;
        };
      };
      responses: {
        /** Lan�amento financeiro exclu�do */
        204: never;
        400: components['responses']['BadRequest'];
        404: components['responses']['NotFound'];
      };
    };
    getCashFlowEntries: {
      parameters: {
        query: {
          /** Tipo do lan�amento financeiro */
          type: components['schemas']['CashFlowEntryType'];
          /** M�s/ano dos lan�amentos financeiros */
          yearMonth: string;
          /** Nome da propriedade para ordena��o */
          sort?: components['parameters']['pageSort'];
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['CashFlowEntrySummary'][];
          };
        };
      };
    };
    createCashFlowEntry: {
      responses: {
        /** Lan�amento financeiro criado */
        201: {
          content: {
            'application/json': components['schemas']['CashFlowEntryDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['CashFlowEntryInput'];
        };
      };
    };
    deleteBulkCashFlowEntries: {
      responses: {
        /** Lan�amentos financeiros exclu�dos */
        204: never;
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': number[];
        };
      };
    };
    getCashFlowCategory: {
      parameters: {
        path: {
          /** ID da categoria */
          categoryId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['CashFlowCategoryDetailed'];
          };
        };
        404: components['responses']['NotFound'];
      };
    };
    updateCashFlowCategory: {
      parameters: {
        path: {
          /** ID da categoria */
          categoryId: number;
        };
      };
      responses: {
        /** Categoria atualizada */
        200: {
          content: {
            'application/json': components['schemas']['CashFlowCategoryDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['CashFlowCategoryInput'];
        };
      };
    };
    /** Exclui fisicamente uma categoria. Caso a categoria possua lan�amentos vinculados, n�o ser� poss�vel exclu�-la. */
    deleteCashFlowCategory: {
      parameters: {
        path: {
          /** ID da categoria */
          categoryId: number;
        };
      };
      responses: {
        /** Categoria exclu�da */
        204: never;
        400: components['responses']['BadRequest'];
        404: components['responses']['NotFound'];
      };
    };
    getCashFlowCategories: {
      parameters: {
        query: {
          /** Nome da propriedade para ordena��o */
          sort?: components['parameters']['pageSort'];
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['CashFlowCategorySummary'][];
          };
        };
      };
    };
    createCashFlowCategory: {
      responses: {
        /** Categoria criada */
        201: {
          content: {
            'application/json': components['schemas']['CashFlowCategoryDetailed'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['CashFlowCategoryInput'];
        };
      };
    };
    createUploadRequest: {
      responses: {
        /** Solicita��o de upload de arquivo criada */
        200: {
          content: {
            'application/json': components['schemas']['UploadRequest'];
          };
        };
        400: components['responses']['BadRequest'];
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['UploadRequestInput'];
        };
      };
    };
  }
}

export interface external {}
